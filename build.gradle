buildscript {
    group 'com.github.alikemalocalan'
    version '1.4-SNAPSHOT'
    ext {
        javaMainClass = "com.github.alikemalocalan.greentunnel4jvm.HttpProxyServer"
        mainClassName = "com.github.alikemalocalan.greentunnel4jvm.HttpProxyServer"
        kotlin_version = '1.3.61'
    }

    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url "https://jitpack.io" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id "java"
    id 'maven'
    id 'java-library'
    id "application"
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm' version '1.3.61'
}

allprojects {
    group = 'com.github.alikemalocalan'
    version = '1.4-SNAPSHOT'
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/alikemalocalan/greentunnel4jvm")
        }

    }
}

application {
    mainClassName = javaMainClass
}

sourceCompatibility = 1.8

publishing {
    publications {
        maven(MavenPublication) {
            groupId 'com.github.alikemalocalan'
            artifactId 'greentunnel4jvm'
            version "$version"

            from components.java

            pom {
                name = 'greentunnel4jvm'
                description = 'Green Tunnel Alternative for JVM Languages'
                url = 'https://github.com/alikemalocalan/greentunnel4jvm'
                licenses {
                    license {
                        name = 'The MIT License (MIT)'
                        url = 'https://mit-license.org/'
                        distribution = 'repo'
                    }
                }
                developers {
                    developer {
                        id = 'alikemalocalan'
                        name = 'Ali Kemal Ã–calan'
                        email = 'alikemalocalan@gmail.com'
                        roles = ['owner', 'developer']
                    }
                }
                scm {
                    url = 'https://github.com/alikemalocalan/greentunnel4jvm'
                    connection = 'scm:git:https://github.com/alikemalocalan/greentunnel4jvm.git'
                    developerConnection = 'scm:git:ssh://git@github.com/alikemalocalan/greentunnel4jvm.git'
                }
            }
        }
    }
    repositories {
        jcenter()
        mavenLocal()
        maven { url 'https://jitpack.io' }
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/alikemalocalan/greentunnel4jvm")
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation 'io.netty:netty-handler-proxy:4.1.50.Final'
    implementation 'com.squareup.okhttp3:okhttp:4.7.2'
    implementation 'com.squareup.okhttp3:okhttp-dnsoverhttps:4.7.2'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.7.2'
    implementation 'ch.qos.logback:logback-classic:1.2.3'
    implementation "io.arrow-kt:arrow-syntax:0.10.5"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
jar {
    manifest {
        attributes 'Main-Class': "com.github.alikemalocalan.greentunnel4jvm.HttpProxyServer"
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task stage(dependsOn: ['build', 'clean'])
build.mustRunAfter clean

task copyToLib(type: Copy) {
    into "$buildDir/libs"
    from configurations.compile
}

stage.dependsOn(copyToLib)

gradle.taskGraph.whenReady {
    taskGraph ->
        if (taskGraph.hasTask(stage)) {
            test.enabled = false
        }
}

task createPom {
    pom {
        project {
            inceptionYear '2008'
            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
        }
    }.writeTo("pom.xml")
}